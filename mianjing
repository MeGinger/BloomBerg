电面的时候就一道题，利口贰无散  253. Meeting Rooms II

用数组实现Queue和最便宜航线问题。
我回头来查看面经，发现版上提到过。就是利口期霸气。

第一题散霸漆, 没要求one pass的做法,   387. First Unique Character in a String
第二题留怡艺. 我觉得我做得比较好的地方可能就是先跟他确认输入是否有效, 写之前就想了一些corner case, 然后基本写一句讲一句思路, 写完了主动分析复杂度

一个是给一个数组，一个random 函数，让我随机输出一个由三个数构成的数组，要求O(1) time and space
另一个就是蠡口妻彝媹 follow up问了我如果type不是int得话怎么做  716. Max Stack

题目就是李口一一漆。。发帖就是想抱怨。 117	Populating Next Right Pointers in Each Node II


应该是个白人小哥，然后我自己主动要求自我介绍，然后他问我简历上实习的经历，给他讲都做了什么。。。感觉没复述清楚
然后做题，刷题网 12
int转罗马，两个数组分别初始化成
int[] values = {1000,500,100,50,10,5,1}
String[] roman = {"M","D","C","L","X","V","I"}它俩是对应的，这样就不用hashmap了
然后遍历上面int数组(也是遍历String数组)，每次i+2，是为了用1000，100，10，1去求给的int数的每一位，比如num = 3421，第一次就是循环就得到digit = 3
然后判断digit，小于4，等于4，4<digit<9，以及等于9的情况，每种情况不同的处理方法：
    小于4，比如3412里面的3，此时i指向1000，应该有3个1000，也就是3个M，就所以就for循环把当前roman加到res后面，for{res += roman;}
    等于4，比如3412里面的4，就应该是500 - 100，此时i指向的一定是values[]里面100，对应roman字符是C，所以结果是CD，所以此时就是res += roman + roman[i - 1];
    大于4小于9，比如假设有个7在十位，就应该是50+10+10，就是i指向的是10，res先加roman[i-1]，然后for循环再把roman加进去
    等于9，假设有个9在个位，所以应该是10 - 1，也就是IX，当前i指向1，所以先放roman，再放roman[i-2]。

循环最后要去掉当前的数字3412 -> 412 -> 12 -> 2


写完了自己写test，就是在main里面加东西输出
. check 1point3acres for more.
然后有问题可以问他。。

不知道BB是不是快满了。。之前同学答的特别好的都挂了不知道为啥，迷

20190220在linkedin上海投Bloomberg的2019 Software Engineer职位，
20190321电面，先让做自我介绍，然后Coding，在Hackerrank的Codepair上做。
一道题：给一个2D矩阵，1代表云，0代表天空，计算有多少朵云，
云和云之间只能横向或纵向相连，用union find做了。
后面问why Bloomberg，然后给我问问题的时间。


昨天面完Bloomberg电面，一共45 min左右开始先问了项目，讲一讲自己觉得简历上最有趣的项目，问了一些项目的算法细节，然后开始做题
第一题 Two Sum, follow up Three Sum. 当时听到题目描述惊呆了，居然还会问 Two Sum. 
面试官会仔细问有几种做法，相对应的time complexity and space complexity是多少以及为什么 
第二题是利口妖妖期，写完代码后也会仔细问时间空间复杂度 117. Populating Next Right Pointers in Each Node II


1. anagram原题 
2. 给一个中间小两边大的数组 像这样[5, 4, 2, 0, -1, 3, 4] 找出转折点 O(logn)时间复杂度限制 两次二分



10分钟前刚面完的。。50分钟
听口音是个白人大叔，在bb工作了5年了
bq：介绍自己，介绍一个最想和他说的项目经历，因为lz说的机器学习他说不是特别懂所以没有很深入的问问题
coding：. check 1point3acres for more.
1. 一大坨文字吓傻我了而且还是我没见过的词叫什么non-degeneracy triangle。。最后讨论之后才知道原来就是给a,b,c三个list，然后看a[i]b[i]c[i]能不能组成合法的三角形。。。
2. 给一个起始坐标 一个终止坐标，下一个可能到达的点是（x+y，y）和（x，x+y）。问能不能到达终点。一看就知道是bfs/dfs。写出来了但是有一些cases timeout，然后经过提示才明白要check两种corner cases。check完就过了
第二题卡在timeout卡了10几分钟要了hint才反应过来估计是悬了。
